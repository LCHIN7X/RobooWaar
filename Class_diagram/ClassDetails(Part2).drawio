<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36" version="27.0.9">
  <diagram name="Page-1" id="7hEuU5L8WPl_ntsHJS8Y">
    <mxGraphModel dx="1804" dy="928" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="CGvUghyQHNpQq5ck0WqS-1" value="Hidebot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="110" y="110" width="280" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-2" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; -int hide_count = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; -bool isHidden = false;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-1">
          <mxGeometry x="-10" y="30" width="170" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-3" value="&lt;div style=&quot;text-align: left;&quot;&gt;+HideBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;: Robot(name, x, y),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenericRobot(name, x, y) {}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+void move() override&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+ bool getHiddenStatus() const&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+void appear()&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+void act() override&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+ void fire() override&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+bool isHit() override&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-1">
          <mxGeometry x="10" y="150" width="270" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-4" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="110" y="190" as="sourcePoint" />
            <mxPoint x="390" y="190" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-5" value="JumpBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="490" y="110" width="340" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-6" value="-&amp;nbsp;int jump_count = 0;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-5">
          <mxGeometry y="30" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-10" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="CGvUghyQHNpQq5ck0WqS-5">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint y="80" as="sourcePoint" />
            <mxPoint x="340" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-7" value="&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp;+JumpBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: Robot(name, x, y),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;GenericRobot(name, x, y) {}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+void move() override&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+void act() override&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+void fire() override&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;+int getJumpCount() const&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-5">
          <mxGeometry y="120" width="340" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-12" value="LongShotBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="100" y="440" width="450" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-8" value="&lt;div&gt;&amp;nbsp;-int fire_count = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp;-const vector&amp;lt;string&amp;gt; upgradeTypes = {&quot;HideLongShotBot&quot;, &quot;JumpLongShotBot&quot;, &quot;LongShotScoutBot&quot;, &quot;LongShotTrackBot&quot;};&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-12">
          <mxGeometry y="40" width="450" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-9" value="&lt;div&gt;+LongShotBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: Robot(name, x, y),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenericRobot(name, x, y) {}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+void fire() override&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-12">
          <mxGeometry x="5" y="110" width="290" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-13" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="100" y="530" as="sourcePoint" />
            <mxPoint x="550" y="530" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-14" value="SemiAutoBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="660" y="440" width="490" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-17" value="&lt;div&gt;+SemiAutoBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;: Robot(name, x, y),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GenericRobot(name, x, y) {}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+void fire() override&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+int getFireCount() const&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-14">
          <mxGeometry x="10" y="140" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-16" value="&lt;div&gt;&amp;nbsp; &amp;nbsp;- int fire_count = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- const vector&amp;lt;string&amp;gt; upgradeTypes = {&quot;HideSemiAutoBot&quot;, &quot;JumpSemiAutoBot&quot;, &quot;SemiAutoScoutBot&quot;, &quot;SemiAutoTrackBot&quot;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-14">
          <mxGeometry y="50" width="490" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-20" value="" style="endArrow=none;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="CGvUghyQHNpQq5ck0WqS-14" target="CGvUghyQHNpQq5ck0WqS-14">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint y="99.5" as="sourcePoint" />
            <mxPoint x="480" y="100" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-15" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="350" y="830" width="290" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-21" value="ThirtyShotBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1290" y="450" width="370" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-18" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; -int shell_count;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;- const vector&amp;lt;string&amp;gt; upgradeTypes = {&quot;HideThirtyShotBot&quot;, &quot;JumpThirtyShotBot&quot;, &quot;ThirtyShotScoutBot&quot;, &quot;ThirtyShotTrackBot&quot;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-21">
          <mxGeometry y="50" width="342.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-23" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="CGvUghyQHNpQq5ck0WqS-21">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint y="100" as="sourcePoint" />
            <mxPoint x="370" y="101" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-19" value="&lt;div&gt;+ThirtyShotBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;Robot(name, x, y),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;GenericRobot(name, x, y),&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+shell_count(30)&lt;/div&gt;&lt;div&gt;+void fire() override&lt;/div&gt;&lt;div&gt;+int getShellCount() const&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-21">
          <mxGeometry x="10" y="130" width="260" height="40" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-24" value="KnightBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="90" y="740" width="460" height="170" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-26" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="CGvUghyQHNpQq5ck0WqS-24">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint y="90" as="sourcePoint" />
            <mxPoint x="460" y="90" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-27" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; +KnightBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;: Robot(name, x, y),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;GenericRobot(name, x, y) {}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; +void fire() override&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-24">
          <mxGeometry x="15" y="110" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-25" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; -int fire_count = 0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;- const vector&amp;lt;string&amp;gt; upgradeTypes = {&quot;HideKnightBot&quot;, &quot;JumpKnightBot&quot;,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&quot;KnightScoutBot&quot;, &quot;KnightTrackBot&quot;};&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="105" y="773" width="430" height="60" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-28" value="&amp;nbsp;ScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="670" y="745" width="210" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-29" value="- int scout_count = 0;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-28">
          <mxGeometry y="28" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-30" value="&lt;div&gt;&amp;nbsp;+ScoutBot(const string &amp;amp;name, int x, int y)&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: Robot(name, x, y),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;GenericRobot(name, x, y) {}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+void look(int X, int Y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+void fire() override&lt;/div&gt;&lt;div&gt;+void act() override&lt;/div&gt;&lt;div&gt;+ int getScoutCount() const&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-28">
          <mxGeometry y="125" width="210" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-33" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="670" y="810" as="sourcePoint" />
            <mxPoint x="870" y="810" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-34" value="TrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1010" y="745" width="280" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-31" value="&lt;div&gt;&amp;nbsp; &amp;nbsp;- int tracker = 3;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;-vector&amp;lt;Robot *&amp;gt; track_target;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-34">
          <mxGeometry x="10" y="28" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-37" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="CGvUghyQHNpQq5ck0WqS-34">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="5" y="79.5" as="sourcePoint" />
            <mxPoint x="280" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-32" value="&lt;div&gt;&amp;nbsp; &amp;nbsp;+ TrackBot(const string &amp;amp;name, int x, int y)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void look(int X, int Y)&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ void showTrackTarget()&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+int getTracker() const&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-34">
          <mxGeometry y="135" width="280" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-38" value="QueenBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="105" y="1050" width="275" height="260" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-39" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; -const vector&amp;lt;pair&amp;lt;int, int&amp;gt;&amp;gt; directions = {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {0, 1},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {1, 0},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {0, -1},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {-1, 0},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {1, 1},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {1, -1},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {-1, 1},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {-1, -1}};&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-38">
          <mxGeometry x="-55" y="85" width="330" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-40" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; +QueenBot(const string &amp;amp;name, int x, int y)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; + void fire() override&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-38">
          <mxGeometry x="-5" y="210" width="270" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-41" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="110" y="1230" as="sourcePoint" />
            <mxPoint x="380" y="1230" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-46" value="VampireBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="590" y="1040" width="330" height="200" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-47" value="&amp;nbsp; &amp;nbsp;- int gainLivesCount = 0;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-46">
          <mxGeometry x="-20" y="30" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-48" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="CGvUghyQHNpQq5ck0WqS-46">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint y="80" as="sourcePoint" />
            <mxPoint x="330" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CGvUghyQHNpQq5ck0WqS-49" value="&lt;div&gt;&amp;nbsp; +&amp;nbsp; VampireBot(const string &amp;amp;name, int x, int y)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y) {};&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; + void fire() override&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="CGvUghyQHNpQq5ck0WqS-46">
          <mxGeometry y="100" width="330" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
