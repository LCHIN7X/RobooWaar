<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36" version="27.0.9">
  <diagram name="Page-1" id="48-uNk8e_bZVFxA0Ozx6">
    <mxGraphModel dx="1804" dy="928" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="jnnJL0M7TV58ahjaR357-1" value="HideLongShotBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="30" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-2" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideLongShotBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LongShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-1">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-3" value="HideSemiAutoBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="425" y="30" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-4" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideSemiAutoBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SemiAutoBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-3">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-5" value="HideThirtyShotBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="830" y="30" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-6" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideThirtyShotBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ThirtyShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-5">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-7" value="HideKnightBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1230" y="30" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-8" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideKnightBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; KnightBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-7">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-9" value="HideQueenBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1630" y="30" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-10" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideQueenBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QueenBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-9">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-11" value="HideVampireBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="425" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-12" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideVampireBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; VampireBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-11">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-13" value="JumpLongShotBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="425" y="425" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-14" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpLongShotBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LongShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-13">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-15" value="JumpSemiAutoBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="830" y="425" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-16" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpSemiAutoBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SemiAutoBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-15">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-17" value="JumpThirtyShotBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1230" y="425" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-18" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpThirtyShotBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ThirtyShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-17">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-19" value="JumpKnightBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1630" y="425" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-20" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpKnightBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; KnightBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-19">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-21" value="JumpQueenBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="840" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-22" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpQueenBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QueenBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-21">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-23" value="JumpVampireBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="425" y="840" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-24" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpVampireBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; VampireBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-23">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-25" value="HideScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="830" y="840" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-26" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-25">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-27" value="HideTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1230" y="840" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-28" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ HideTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HideBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-27">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-29" value="JumpScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1630" y="840" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-30" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScooutBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-29">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-31" value="JumpTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="1240" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-32" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ JumpTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JumpBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-31">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-33" value="LongShotScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="425" y="1240" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-34" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ LongShotScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LongShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-33">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-35" value="LongShotTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="830" y="1240" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-36" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ LongShotTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LongShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-35">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-37" value="SemiAutoScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1230" y="1240" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-38" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ SemiAutoScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SemiAutoBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-37">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-39" value="SemiAutoTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1630" y="1240" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-40" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ SemiAutoTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SemiAutoBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-39">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-41" value="ThirtyShotScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="20" y="1630" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-42" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ ThirtyShotScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ThirtyShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-41">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-43" value="ThirtyShotTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="415" y="1630" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-44" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ ThirtyShotTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ThirtyShotBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-43">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-45" value="KnightScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="820" y="1630" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-46" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ KnightScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; KnightBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-45">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-47" value="KnightTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1220" y="1630" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-48" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ KnightTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; KnightBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-47">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-49" value="QueenScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1620" y="1630" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-50" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ QueenScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QueenBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-49">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-51" value="QueenTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="2000" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-52" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ QueenTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QueenBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-51">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-53" value="VampireScoutBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="430" y="2000" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-54" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ VampireScoutBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; VampireBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScoutBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-53">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-55" value="VampireTrackBot" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="830" y="2000" width="350" height="250" as="geometry" />
        </mxCell>
        <mxCell id="jnnJL0M7TV58ahjaR357-56" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp;+ VampireTrackBot(const string &amp;amp;name, int x, int y)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : Robot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GenericRobot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; VampireBot(name, x, y),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TrackBot(name, x, y) {}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void move() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void fire() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+ void think() override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;+void act() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+void look(int X, int Y) override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+&amp;nbsp; bool isHit() override&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;+ void setBattlefield(Battlefield *bf)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="jnnJL0M7TV58ahjaR357-55">
          <mxGeometry y="110" width="350" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
